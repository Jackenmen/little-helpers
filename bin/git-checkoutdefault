#!/bin/bash
#
# This script just checks out the default branch.
# I do it all the time, so why not make it simpler?
#
# Personally, I have this command aliased to `git cod` to type even less :)
#
# Note: This works with an assumption that
# the default branch is set on a remote called `origin`
#
#
# Copyright 2021-present Jakub Kuczys (https://github.com/Jackenmen)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if ! default_branch=$(git rev-parse --abbrev-ref origin/HEAD 2>/dev/null); then
    echo 'origin/HEAD not set, querying the remote to determine its default branch...'
    git remote set-head origin -a
    if ! default_branch=$(git rev-parse --abbrev-ref origin/HEAD); then
        exit 1
    fi
fi
default_branch="${default_branch#origin/}"
git checkout "$default_branch" || exit 1
