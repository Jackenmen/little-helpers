#!/bin/bash
#
# This script fetches and checks out a merge commit of the pull request
# with a given number.
#
# Usage: `git checkoutpr <pr_number> [branch]`
#
# When `branch` is passed, the script will additionally create a branch
# from PR's merge branch, rather than only do a checkout to a dangling commit.
#
# Personally, I have this command aliased to `git copr` to type even less :)
#
# Note: only works on GitHub and other services who provide merge commit refs
# in a format of: `pull/PR_NUMBER/merge`
#
#
# Copyright 2021-present Jakub Kuczys (https://github.com/jack1142)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Check if params are enough to go ahead.
pullRequestNumber=$1
if [[ -z "$pullRequestNumber" ]]; then
    echo "ERROR: Please provide the PR number." 1>&2
    exit 1
fi
if ! [[ $pullRequestNumber =~ ^[1-9][0-9]*$ ]]; then
   echo "ERROR: Not a number." 1>&2
   exit 1
fi

if [ $# -gt 1 ]; then
    branch=$2
    git fetch upstream "+refs/pull/$pullRequestNumber/merge:$branch" || exit 1
    git checkout "$branch" || exit 1
else
    git fetch upstream "+refs/pull/$pullRequestNumber/merge" || exit 1
    git checkout FETCH_HEAD || exit 1
fi
