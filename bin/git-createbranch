#!/bin/bash
#
# This script creates a branch and automatically "creates" and tracks the remote branch.
#
# The remote branch created by the script is fake
# as it isn't actually pushed to the remote
# and only exists locally before first `git push`.
#
# Usage: `git createbranch <branch_name>`
#
# Personally, I have this command aliased to `git cb` to type even less :)
#
# Note: This works with an assumption that the remote
# which you want to create the branches on is called `origin`.
#
#
# Copyright 2021 Jakub Kuczys (https://github.com/jack1142)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

newBranchName=$1
if [[ -z "$newBranchName" ]]; then
    echo "ERROR: Please provide the branch name." 1>&2
    exit 1
fi

remoteRef="refs/remotes/origin/$newBranchName"

echo "create $remoteRef HEAD" | git update-ref --stdin || exit 1
git checkout "$newBranchName"
