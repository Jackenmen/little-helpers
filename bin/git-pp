#!/bin/bash
#
# This script is basically a shorter version of
# `git pull upstream default_branch && git push`
# with a few extra things that ensure, you're in the right branch
# and it works no matter what name the default branch has.
#
# Note: This works with an assumption that the remote for upstream is called `upstream`
# and that the remote for your fork is called `origin`.
#
#
# Copyright 2021 Jakub Kuczys (https://github.com/jack1142)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

git fetch upstream || exit 1

default_branch=$(
    git ls-remote --symref upstream HEAD |
    awk '/^ref:/ {sub(/refs\/heads\//, "", $2); print $2}'
)
current_branch=$(git branch --show-current)

if [[ $current_branch != "$default_branch" ]]; then
    echo "The default branch is not currently checked out."
    while true; do
        read -rp "Do you want to checkout to default branch ($default_branch)? (y/n) " response
        case $response in
            [Yy]*) break;;
            [Nn]*)
                echo "Exiting..."
                exit
                ;;
            *)
                echo "Please answer yes or no."
                ;;
        esac
    done
    git checkout "$default_branch" || exit 1
fi

git fetch origin || exit 1
git merge "upstream/$default_branch" --ff-only || exit 1
git push origin "$default_branch" || exit 1
